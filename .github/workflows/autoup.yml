name: autoup

on:
  push:
  label:
      types: [created,edited]
  pull_request:
  schedule:
    - cron: "0 9 * * 5-5"
    
concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v3.1.0
      - name: Setup termux-create-package
        run: |
          python -m pip install --upgrade pip
          git clone https://github.com/termux/termux-create-package
          cd termux-create-package
          python setup.py install
          cd ..
      - name: Update DataBase
        run: |
          wget -O share/QQWry.Dat https://github.com/out0fmemory/qqwry.dat/raw/master/qqwry_lastest.dat
      - name: Make Deb
        run: |
          termux-create-package manifest.json
      - name: Download Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          path: ./build
      - name: Upload Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: nali_2018.08.01_all.deb
          path: ./build
      - name: Get checksums
        id: get_checksums
        run: |
          checksums=$(printf 'SHA-256:\n```\n%s\n```\n' "$(sha256sum *.zip)")
          checksums="${checksums//'%'/'%25'}"
          checksums="${checksums//$'\n'/'%0A'}"
          checksums="${checksums//$'\r'/'%0D'}"
          echo "::set-output name=checksums::$checksums"
      - name: Create new tag
        id: get_tag
        run: |
          new_tag="nali-$(date "+%Y.%m.%d")"
          existing_tag_revision=$(git tag)
          if [ -n "$existing_tag_revision" ]; then
            tag_rev=$((existing_tag_revision + 1))
          else
            tag_rev=1
          fi
          new_tag="${new_tag}-r${tag_rev}"
          git tag "$new_tag"
          git push --tags
          echo "::set-output name=tag_name::$new_tag"
      - name: Publish GitHub release
        uses: termux/upload-release-action@v3.0.3
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "build/*"
          file_glob: true
          release_name: "IPDB Auto Update"
          tag: ${{ steps.get_tag.outputs.tag_name }}
          body: ${{ steps.get_checksums.outputs.checksums }}
